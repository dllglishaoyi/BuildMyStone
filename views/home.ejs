<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">
<link rel='stylesheet' href='/stylesheets/style.css' />
<link rel='stylesheet' href='/plugins/ligrid/ligrid.css' />
</head>
<body>
  卡牌职业
    <select id="cardklass">
      <option value=0>全部</option>
      <option value="2">德鲁伊</option>
      <option value="3">猎人</option>
      <option value="4">法师</option>
      <option value="5">圣骑士</option>
      <option value="6">牧师</option>
      <option value="7">刺客</option>
      <option value="8">萨满</option>
      <option value="9">术士</option>
      <option value="10">战士</option>
    </select>
    <input type="search" id="search">
    <button id="searchBtn">搜索</button>
    <br>
    <input type="test" id="username" placeholder="用户名" value="<%= userdata ? userdata.userName : ''%>">
    <button id="upload">上传卡组</button>
    <button id="goBtn">推荐卡组</button>
    <br>推荐职业
    <select id="klass">
      <option value=0>全部</option>
      <option value="2">德鲁伊</option>
      <option value="3">猎人</option>
      <option value="4">法师</option>
      <option value="5">圣骑士</option>
      <option value="6">牧师</option>
      <option value="7">刺客</option>
      <option value="8">萨满</option>
      <option value="9">术士</option>
      <option value="10">战士</option>
    </select>
    <div  id="ligrid">
    </div>
    <a id="decks-area-btn" href="#decks-area"></a>
    <div name="decks-area" id="decks-area">

    </div>
    <script type="text/template" id="card-item">
      <li class="card-item">
        <a class="card-frame rare-card rarity-{{= rarity}}" href="{{= href}}">
        <span class="card-cost">{{= cost}}</span>
        <span class="card-name">{{= cardName}}{{= flag ? "(您有)" : ''}}</span>
        <span class="card-count">1</span>
        <span class="card-image card-count-ex">
          <img src="{{= smImg}}">
        </span>
        </a>
      </li>
    </script>
    <script src="/javascripts/zepto.min.js"></script>
    <script type="text/javascript" src="/javascripts/underscore-min.js"></script>
    <script src="/plugins/ligrid/ligrid.js"></script>
    <script type="text/javascript">
        var cards = <%- JSON.stringify(cards)%>;
        var userdata = <%- JSON.stringify(userdata ? userdata.cards : [])%>;
        var cardsMap = _.indexBy(cards, 'name');
         _.templateSettings = {
            interpolate: /\{\{\=(.+?)\}\}/gim,
            evaluate: /\{\{(.+?)\}\}/gim,
        };
        var compiled = _.template($('#card-item').html());

        var ligrid = new Ligrid({countPerpage:20,gridid:"ligrid",userData:userdata});
        ligrid.loadData(cards);
        document.getElementById("searchBtn").addEventListener("click",function(e){
            var keyword = document.getElementById('search').value;
            if (true || keyword) {
                var newcards = cards.filter(function(item) {
                    return item.name.indexOf(keyword) > -1 && ($("#cardklass").val() == 0 || item.klass == $("#cardklass").val());
                });
                ligrid.loadData(newcards);
            }else{
                ligrid.loadData(cards);
            }
        });
        document.getElementById("goBtn").addEventListener("click",function(e){
            // ligrid.showData();
            // console.log(ligrid.getSelectedData());

            var cardsdata = ligrid.getSelectedData();
            if (cardsdata.length <= 0) {
                alert("请选择卡牌");
                return;
            };
            var postData = { cards: cardsdata ,klass:$("#klass").val()};
            $.ajax({
              type: 'POST',
              url: '/getrecommenddecks',
              // data to be added to query string:
              data: postData,
              // type of data we are expecting in return:
              dataType: 'json',
              timeout: 15000,
              success: function(data){
                console.log(data);
                showDecks(data);
              },
              error: function(xhr, type){
                alert('Ajax error!')
              }
            });
        });

        document.getElementById("upload").addEventListener("click",function(e){
            var username = document.getElementById('username').value;
            if (!username) {
                alert("请输入用户名");
                return;
            };
            var cardsdata = ligrid.getSelectedData();
            $.ajax({
              type: 'POST',
              url: '/uploadusercards',
              data: {username:username, cards:cardsdata},
              dataType: 'json',
              timeout: 15000,
              success: function(data){
                console.log(data);
              },
              error: function(xhr, type){
                alert('Ajax error!')
              }
            });
        });
        function showDecks(decks){
            var decksArea = document.getElementById("decks-area");
            decksArea.innerHTML = "";
            for (var i = 0; i < decks.length; i++) {
                addDeck(decks[i]);
            };
            $(".expand-btn").click(function(e) {
              $(this).parent().parent().find(".card-item").toggle();
            });
        }
        function addDeck(deck){
            var deckList = document.createElement("ul");
            deckList.className = "deck";
            var deckHeader = document.createElement("li");
            deckHeader.innerHTML = "相似度："+deck.percent+"<a href="+deck.deckSourceUrl+">卡组详解</a><button class='expand-btn'>展开/收起</button>";
            deckList.appendChild(deckHeader);
            var html = '';
            for (var i = 0; i < deck.originalDeck.length; i++) {
                // var cardItem = document.createElement("li");
                // cardItem.className = "card-item";
                var flag = false;
                deck.originalDeck[i].cardName = deck.originalDeck[i].cardName.trim();
                var a = deck.sameCards.indexOf(deck.originalDeck[i].cardName);
                if (a >=0) {
                    deck.sameCards.splice(a, 1); 
                    flag = true;
                };
                // cardItem.innerHTML = deck.originalDeck[i].cardName + (flag ? "(您有)" : '');
                // deckList.appendChild(cardItem);

                var smImg = '/images/upload/sm-card-' + (cardsMap[deck.originalDeck[i].cardName] ? cardsMap[deck.originalDeck[i].cardName].name_en.toLowerCase().replace(/\s/g,"-").replace(/[.']/g,"")+".png" : "");
                var card = cardsMap[deck.originalDeck[i].cardName];
                if (!card) {
                  console.log(deck.originalDeck[i].cardName);
                };
                var cardItem = {
                  cardName:deck.originalDeck[i].cardName,
                  flag:flag,
                  smImg:smImg,
                  rarity:(card ? card.rarity : "1"),
                  cost:(card ? card.cost : "X"),
                  name_en:(card ? card.name_en : 'XXX'),
                  href:"http://db.duowan.com/lushi/card/detail/"+card.name_en.replace(" ","_")+".html"
                }
                html += compiled(cardItem);
            };
            // console.log(html);
            $(deckList).append(html);
            var decksArea = document.getElementById("decks-area");
            decksArea.appendChild(deckList);
            $("#decks-area-btn").click();
        }
        // if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {
            // $(".ligrid-li").click(function() {
            //     ligrid.itemClick(this);
            // });
        // };
    </script>
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-56016287-1', 'auto');
      ga('send', 'pageview');

    </script>
</body>
</html>